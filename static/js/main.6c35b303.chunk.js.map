{"version":3,"sources":["common/link/index.ts","config/index.ts","layout/top-nav.tsx","layout/left-nav.tsx","layout/footer.tsx","layout/index.tsx","interface/crud/config.ts","interface/crud/mock-data.ts","superadmin/superadmin.tsx","superadmin/index.tsx","router.tsx","theme.js","index.tsx"],"names":["toRouteSuperAdmin","s","SuperAdmin","base","instance","permission","entity","Public","appTitle","process","REACT_APP_APP_TITLE","gitHubRepoUrl","REACT_APP_GITHUB_REPO_URL","Top","UI","Nav","useStyles","Utils","makeStyles","theme","appBar","backgroundColor","palette","background","paper","isOpen","onToggle","useTheme","classes","menus","link","Links","Icon","LogoutIcon","title","className","textColor","primary","main","drawer","paddingTop","spacing","menuItem","color","contrastText","label","Left","Drawer","Menu","Label","children","listSuperAdmin","Link","AppsIcon","PermissionIcon","InstanceIcon","EntityIcon","permissions","Stateful","Credentials","getPermissions","sort","a","b","onClose","classNames","hideToggleButton","list","filter","x","includes","icon","item","sha","Footer","Copyright","company","root","display","appBarSpacer","mixins","toolbar","content","flexGrow","height","overflow","container","minHeight","paddingBottom","Layout","props","useState","open","setOpen","matches","useMediaQuery","useEffect","CssBaseline","undefined","Container","maxWidth","entities","data","Instance","uuid","name","dateAdded","User","firstName","lastName","email","status","id","lang","Permission","PermissionInstance","apiUrl","urlPrefix","withBackend","mockData","MockData","Wrapper","Auth","REDIRECT_URI","Conf","withRouter","useIdleTimer","Store","set","location","pathname","window","path","component","history","History","basename","R","maxSnack","createMuiTheme","type","secondary","default","success","ReactDOM","render","withCssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.6c35b303.chunk.js","sourcesContent":["const superAdminBase = '';\n\nconst toRouteSuperAdmin = (s: string) => superAdminBase + s;\n\nexport const SuperAdmin = {\n  base: superAdminBase,\n  instance: toRouteSuperAdmin('/instance'),\n  permission: toRouteSuperAdmin('/permission'),\n  entity: toRouteSuperAdmin('/entity')\n};\n\nexport const Public = { logout: '/logout' };\n","export const appTitle = process.env.REACT_APP_APP_TITLE || 'Awesome App';\n\nexport const withBackend =\n  process.env.REACT_APP_WITH_BACKEND === 'true' ? true : false;\n\nexport const gitHubRepoUrl =\n  process.env.REACT_APP_GITHUB_REPO_URL ||\n  'https://github.com/nexys-system/superadmin-front';\n","import React from 'react';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\nimport { appTitle } from 'config';\n\nconst {\n  Nav: { Top }\n} = UI;\n\nconst useStyles = Utils.makeStyles(theme => ({\n  appBar: {\n    backgroundColor: theme.palette.background.paper\n    // boxShadow: 'none'\n  }\n}));\n\ninterface Props {\n  isOpen: boolean;\n  onToggle?: (isOpen: boolean) => void;\n}\n\nexport default ({ isOpen, onToggle }: Props) => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const menus = [{ link: Links.Public.logout, Icon: LogoutIcon }];\n\n  return (\n    <Top\n      title={appTitle}\n      menus={menus}\n      className={classes.appBar}\n      isOpen={isOpen}\n      textColor={theme.palette.primary.main}\n      onToggle={onToggle}\n    />\n  );\n};\n","import React from 'react';\n\n// Icon import\nimport {\n  VpnKey as PermissionIcon,\n  Storage as InstanceIcon,\n  AccountTree as EntityIcon,\n  Apps as AppsIcon\n} from '@material-ui/icons';\n// end icon\n\nimport { UI, Stateful, Utils } from '@nexys/material-components';\nimport * as Link from 'common/link';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  drawer: {\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: theme.spacing(8)\n  },\n  menuItem: {\n    color: `${theme.palette.primary.contrastText} !important`\n  },\n  label: {\n    color: 'white'\n  }\n}));\n\ninterface TMenu {\n  link: string;\n  label: React.ReactNode;\n  Icon: any;\n  permission: string;\n}\n\nconst {\n  Nav: {\n    Left: { Drawer, Menu }\n  }\n} = UI;\n\nconst superAdminPermission = 'superadmin';\n\nconst Label = ({ children }: { children: React.ReactNode }): JSX.Element => {\n  const classes = useStyles();\n\n  return <span className={classes.label}>{children}</span>;\n};\n\nconst listSuperAdmin: TMenu[] = [\n  {\n    link: Link.SuperAdmin.base,\n    label: <Label>Superadmin Dashboard</Label>,\n    Icon: AppsIcon,\n    permission: superAdminPermission\n  },\n  {\n    link: Link.SuperAdmin.permission,\n    label: <Label>Permissions</Label>,\n    Icon: PermissionIcon,\n    permission: superAdminPermission\n  },\n  {\n    link: Link.SuperAdmin.instance,\n    label: <Label>Instance</Label>,\n    Icon: InstanceIcon,\n    permission: superAdminPermission\n  },\n  {\n    link: Link.SuperAdmin.entity,\n    label: <Label>Entities</Label>,\n    Icon: EntityIcon,\n    permission: superAdminPermission\n  }\n];\n\nexport default ({ isOpen }: { isOpen: boolean }) => {\n  const classes = useStyles();\n\n  // list of permissions from profile\n  const permissions =\n    Stateful.Credentials.getPermissions().sort((a: string, b: string) => {\n      if (a < b) {\n        return -1;\n      }\n\n      if (a > b) {\n        return 1;\n      }\n\n      return 0;\n    }) || [];\n\n  return (\n    <Drawer\n      isOpen={isOpen}\n      onClose={() => {}}\n      classNames={{ paper: classes.drawer }}\n      hideToggleButton={true}\n    >\n      <Menu\n        list={listSuperAdmin.filter(x => permissions.includes(x.permission))}\n        classNames={{ icon: classes.menuItem, item: classes.menuItem }}\n      />\n    </Drawer>\n  );\n};\n","import React from 'react';\n\nimport { UI } from '@nexys/material-components';\nimport { appTitle, gitHubRepoUrl } from 'config';\n\nconst shaToUrl = (sha: string) => `${gitHubRepoUrl}/commit/${sha}`;\n\nconst sha: string = process.env.REACT_APP_GIT_SHA || 'sha_placeholder';\n\nconst Footer = () => (\n  <UI.Nav.Footer.Footer>\n    <UI.Nav.Footer.Copyright\n      sha={{ sha, link: shaToUrl(sha) }}\n      company={appTitle}\n    />\n  </UI.Nav.Footer.Footer>\n);\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport { Utils } from '@nexys/material-components';\n\nimport TopNav from './top-nav';\nimport LeftNav from './left-nav';\nimport Footer from './footer';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1\n  },\n  main: {\n    height: '100%',\n    overflow: 'auto'\n  },\n  container: {\n    minHeight: 'calc(100vh - 64px - 72px)', // we need to subtract the height of the topnav and the height of the footer\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\ninterface Props {\n  children: React.ReactElement;\n}\n\nfunction Layout(props: Props) {\n  const [open, setOpen] = useState(true);\n  const matches = useMediaQuery('(min-width:600px)');\n  const classes = useStyles();\n  const { children } = props;\n\n  useEffect(() => {\n    setOpen(matches);\n  }, [matches]);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <TopNav\n        onToggle={!matches ? x => setOpen(!x) : undefined}\n        isOpen={open}\n      />\n      <LeftNav isOpen={open} />\n\n      <div className={classes.content}>\n        <main className={classes.main}>\n          <div className={classes.appBarSpacer} />\n\n          <Container maxWidth=\"lg\" className={classes.container}>\n            {children}\n          </Container>\n\n          <Footer />\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","// This code was generated automatically via the Nexys platform on Fri Mar 19 2021 16:33:53 GMT+0100 (Central European Standard Time), do not alter, regenerate if needed\n\nexport interface User {\n  uuid: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  status: { id: number } | UserStatus;\n  logDateAdded: Date;\n  instance: { uuid: string } | Instance;\n}\n\nexport interface UserStatus {\n  id: number;\n  name: string;\n}\n\nexport interface Instance {\n  uuid: string;\n  name: string;\n  dateAdded: Date;\n}\n\nexport interface Permission {\n  uuid: string;\n  name: string;\n}\n\nexport interface UserPermission {\n  uuid: string;\n  permissionInstance: { uuid: string } | PermissionInstance;\n  user: { uuid: string } | User;\n}\n\nexport interface PermissionInstance {\n  uuid: string;\n  instance: { uuid: string } | Instance;\n  permission: { uuid: string } | Permission;\n}\n\nexport const entities = [];\n","import * as ET from '@nexys/material-components/dist/entity-generator/type';\n\nexport const data: ET.EntityMockData = {\n  Instance: {\n    list: [\n      {\n        uuid: 'uuid1',\n        name: 'Mock Instance #1',\n        dateAdded: '2021-01-02T14:15:00Z'\n      },\n      {\n        uuid: 'uuid2',\n        name: 'Mock Instance #2',\n        dateAdded: '2021-01-05T16:22:00Z'\n      }\n    ]\n  },\n  User: {\n    list: [\n      {\n        uuid: 'user-uuid-1',\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'john.doe@example.com',\n        status: { id: 1 },\n        instance: {\n          uuid: 'uuid1'\n        },\n        lang: 'en'\n      },\n      {\n        uuid: 'user-uuid-2',\n        firstName: 'Jane',\n        lastName: 'Doe',\n        email: 'jane.doe@example.com',\n        status: { id: 2 },\n        instance: {\n          uuid: 'uuid1'\n        },\n        lang: 'en'\n      }\n    ]\n  },\n  Permission: {\n    list: [\n      {\n        uuid: 'permission-uuid-1',\n        name: 'app'\n      },\n      {\n        uuid: 'permission-uuid-2',\n        name: 'admin'\n      },\n      {\n        uuid: 'permission-uuid-3',\n        name: 'superadmin'\n      }\n    ]\n  },\n  PermissionInstance: {\n    list: [\n      {\n        uuid: 'permission-instance-uuid-1',\n        instance: {\n          uuid: 'uuid1'\n        },\n        permission: {\n          uuid: 'permission-uuid-1'\n        }\n      },\n      {\n        uuid: 'permission-instance-uuid-2',\n        instance: {\n          uuid: 'uuid1'\n        },\n        permission: {\n          uuid: 'permission-uuid-2'\n        }\n      },\n      {\n        uuid: 'permission-instance-uuid-3',\n        instance: {\n          uuid: 'uuid1'\n        },\n        permission: {\n          uuid: 'permission-uuid-3'\n        }\n      }\n    ]\n  }\n};\n","import React from 'react';\n\nimport { BusinessModule } from '@nexys/material-components';\nimport * as Links from 'common/link';\nimport { withBackend } from 'config';\nimport { entities } from 'interface/crud/config';\nimport * as MockData from 'interface/crud/mock-data';\n\nconst SuperAdmin = (): JSX.Element => (\n  <BusinessModule.SuperAdmin\n    apiUrl=\"/crud/query/superadmin\"\n    entities={entities}\n    urlPrefix={Links.SuperAdmin.base}\n    withBackend={withBackend}\n    mockData={MockData.data}\n  />\n);\n\nexport default SuperAdmin;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  withRouter,\n  RouteComponentProps\n} from 'react-router-dom';\n\nimport { Stateful, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nimport Layout from '../layout';\nimport SuperAdmin from './superadmin';\n\nconst {\n  Auth: { Wrapper },\n  Conf: { REDIRECT_URI }\n} = Stateful;\n\nfunction SuperAdminRoutes(props: RouteComponentProps) {\n  const handleOnIdle = () => {\n    Stateful.Store.set('sessionExpired', true);\n    Stateful.Store.set(REDIRECT_URI, props.location.pathname);\n    window.location.pathname = Links.Public.logout;\n  };\n\n  Utils.useIdleTimer(handleOnIdle, 60);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path={Links.SuperAdmin.base} component={SuperAdmin} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default withRouter(Wrapper(SuperAdminRoutes, 'superadmin'));\n","import React from 'react';\n\nimport {\n  Switch,\n  Route,\n  withRouter,\n  Router,\n  RouteComponentProps\n} from 'react-router-dom';\nimport * as History from 'history';\n\nimport { SnackbarProvider } from '@nexys/material-components';\n\nimport * as Links from 'common/link';\n\nimport SuperAdmin from './superadmin';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || ''\n});\n\nconst MyRouter = (props: RouteComponentProps) => (\n  <SnackbarProvider maxSnack={3}>\n    <Switch>\n      <Route\n        path={Links.SuperAdmin.base}\n        component={SuperAdmin}\n        props={props}\n      />\n    </Switch>\n  </SnackbarProvider>\n);\n\nconst R = withRouter(MyRouter);\n\nexport default () => (\n  <Router history={history}>\n    <R />\n  </Router>\n);\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#5691ff'\n    },\n    secondary: {\n      main: '#1164FD'\n    },\n    background: {\n      default: '#f5f5f5'\n    },\n    success: {\n      main: '#91ff56'\n    }\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AppRouter from './router';\nimport theme from './theme';\n\nimport { ThemeProvider } from '@nexys/material-components';\n\nReactDOM.render(\n  <ThemeProvider theme={theme} withCssBaseline>\n    <AppRouter />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}